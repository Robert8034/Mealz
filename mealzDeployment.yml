apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    type: LoadBalancer
    ports:
    - name: "http"
      port: 80
      targetPort: 80
      nodePort: 30000
    - name: "https"
      port: 443
      targetPort: 443
      nodePort: 30001
    selector:
      io.kompose.service: apigateway

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authdb
    name: authdb
  spec:
    ports:
    - name: "5673"
      port: 5673
      targetPort: 5672
    - name: "1433"
      port: 1433
      targetPort: 1433
    selector:
      io.kompose.service: authdb
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authentication
    name: authentication
  spec:
    ports:
    - name: "50010"
      port: 50010
      targetPort: 80
    - name: "50011"
      port: 50011
      targetPort: 443
    selector:
      io.kompose.service: authentication
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: moderationdb
    name: moderationdb
  spec:
    ports:
    - name: "5675"
      port: 5675
      targetPort: 5672
    - name: "1453"
      port: 1453
      targetPort: 1433
    selector:
      io.kompose.service: moderationdb
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: moderationservice
    name: moderationservice
  spec:
    ports:
    - name: "50040"
      port: 50040
      targetPort: 80
    - name: "50041"
      port: 50041
      targetPort: 443
    selector:
      io.kompose.service: moderationservice
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-express
    name: mongo-express
  spec:
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      io.kompose.service: mongo-express
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbit
    name: rabbit
  spec:
    ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "5672"
      port: 5672
      targetPort: 5672
    selector:
      io.kompose.service: rabbit
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: recipeservice
    name: recipeservice
  spec:
    ports:
    - name: "50030"
      port: 50030
      targetPort: 80
    - name: "50031"
      port: 50031
      targetPort: 443
    selector:
      io.kompose.service: recipeservice
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userdb
    name: userdb
  spec:
    ports:
    - name: "5674"
      port: 5674
      targetPort: 5672
    - name: "1443"
      port: 1443
      targetPort: 1433
    selector:
      io.kompose.service: userdb
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userservice
    name: userservice
  spec:
    ports:
    - name: "50020"
      port: 50020
      targetPort: 80
    - name: "50021"
      port: 50021
      targetPort: 443
    selector:
      io.kompose.service: userservice
  status:
    loadBalancer: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: apigateway
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: apigateway
      spec:
        containers:
        - image: robert8034/apigateway:latest
          imagePullPolicy: ""
          name: apigateway
          ports:
          - containerPort: 80
          - containerPort: 443
          env:
            - name: "ASPNETCORE_ENVIRONMENT"
              value: ""
          resources: {}
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authdb
    name: authdb
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: authdb
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: authdb
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: Your_password123
          image: mcr.microsoft.com/mssql/server
          imagePullPolicy: ""
          name: authdb
          ports:
          - containerPort: 5672
          - containerPort: 1433
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authentication
    name: authentication
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: authentication
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: authentication
      spec:
        containers:
        - image: robert8034/authentication:latest
          imagePullPolicy: ""
          name: authentication
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: moderationdb
    name: moderationdb
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: moderationdb
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: moderationdb
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: Your_password123
          image: mcr.microsoft.com/mssql/server
          imagePullPolicy: ""
          name: moderationdb
          ports:
          - containerPort: 5672
          - containerPort: 1433
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: moderationservice
    name: moderationservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: moderationservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: moderationservice
      spec:
        containers:
        - image: robert8034/moderationservice:latest
          imagePullPolicy: ""
          name: moderationservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongo
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongo
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: example
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo
          imagePullPolicy: ""
          name: mongo
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-express
    name: mongo-express
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongo-express
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongo-express
      spec:
        containers:
        - env:
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            value: example
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            value: root
          image: mongo-express
          imagePullPolicy: ""
          name: mongo-express
          ports:
          - containerPort: 8081
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbit
    name: rabbit
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: rabbit
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: rabbit
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: ""
          name: rabbitmq
          ports:
          - containerPort: 15672
          - containerPort: 5672
          resources: {}
        hostname: rabbit
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: recipeservice
    name: recipeservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: recipeservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: recipeservice
      spec:
        containers:
        - env:
          - name: MongoDB__Host
            value: mongo
          image: robert8034/recipeservice:latest
          imagePullPolicy: ""
          name: recipeservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userdb
    name: userdb
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: userdb
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: userdb
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: Your_password123
          image: mcr.microsoft.com/mssql/server
          imagePullPolicy: ""
          name: userdb
          ports:
          - containerPort: 5672
          - containerPort: 1433
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userservice
    name: userservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: userservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o mealzDeployment.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: userservice
      spec:
        containers:
        - image: robert8034/userservice:latest
          imagePullPolicy: ""
          name: userservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

